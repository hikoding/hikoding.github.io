<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Terminal에서 webpack 사용하기</title>
    <link href="/2022/10/06/JavaScript/Webpack/webpack-cli/"/>
    <url>/2022/10/06/JavaScript/Webpack/webpack-cli/</url>
    
    <content type="html"><![CDATA[<h1 id="Terminal에서-webpack-사용하기"><a href="#Terminal에서-webpack-사용하기" class="headerlink" title="Terminal에서 webpack 사용하기"></a>Terminal에서 webpack 사용하기</h1><h2 id="webpack-webpack-cli-설치"><a href="#webpack-webpack-cli-설치" class="headerlink" title="webpack, webpack-cli 설치"></a>webpack, webpack-cli 설치</h2><p>npm을 통해 webpack과 webpack-cli 설치가 필요합니다.</p><figure class="highlight avrasm"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs avrasm">npm i -g webpack webpack-<span class="hljs-keyword">cli</span><br></code></pre></td></tr></table></figure><h2 id="production-모드로-build하기"><a href="#production-모드로-build하기" class="headerlink" title="production 모드로 build하기"></a>production 모드로 build하기</h2><p>–mode production 를 추가해주면 됩니다.<br>하지만 기본값이므로 생략 가능합니다.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">webpack ./js/<span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.js</span> <span class="hljs-attr">--output-path</span> dist <span class="hljs-attr">--output-filename</span> <span class="hljs-selector-tag">main</span>.js<br></code></pre></td></tr></table></figure><h2 id="development-모드로-build하기"><a href="#development-모드로-build하기" class="headerlink" title="development 모드로 build하기"></a>development 모드로 build하기</h2><p>–mode development를 추가해줍니다.</p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs stylus">webpack ./js/<span class="hljs-selector-tag">main</span><span class="hljs-selector-class">.js</span> <span class="hljs-attr">--mode</span> development <span class="hljs-attr">--output-path</span> dist <span class="hljs-attr">--output-filename</span> <span class="hljs-selector-tag">main</span>.js<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>Webpack</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Rest Framework 간단 구동 소스</title>
    <link href="/2022/10/04/RestFramework/Rest%20Framework%20%EA%B0%84%EB%8B%A8%20%EA%B5%AC%EB%8F%99%20%EC%86%8C%EC%8A%A4/"/>
    <url>/2022/10/04/RestFramework/Rest%20Framework%20%EA%B0%84%EB%8B%A8%20%EA%B5%AC%EB%8F%99%20%EC%86%8C%EC%8A%A4/</url>
    
    <content type="html"><![CDATA[<p>간단하게 테스트용으로 구동해봅니다</p><p>우선 myapp이라는 앱을 추가하고 settings.py에 추가한 상태입니다.</p><p><code>myapp.models.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Person</span>(models.Model):<br>    first_name = models.CharField(max_length=<span class="hljs-number">30</span>)<br>    last_name = models.CharField(max_length=<span class="hljs-number">30</span>)<br></code></pre></td></tr></table></figure><p><code>serializers.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Person<br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> serializers<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">PersonSerializer</span>(serializers.ModelSerializer):<br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">Meta</span>:<br>        model = Person<br>        fields = <span class="hljs-string">&#x27;__all__&#x27;</span><br></code></pre></td></tr></table></figure><p><code>views.py</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> viewsets<br><span class="hljs-keyword">from</span> .serializers <span class="hljs-keyword">import</span> PersonSerializer<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Person<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">PersonViewSet</span>(viewsets.ModelViewSet):<br>    queryset = Person.objects.<span class="hljs-built_in">all</span>()<br>    serializer_class = PersonSerializer<br></code></pre></td></tr></table></figure><p><code>urls.py</code> (프로젝트폴더)</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin<br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path, include<br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> routers<br><span class="hljs-keyword">from</span> myapp <span class="hljs-keyword">import</span> views<br><br><br>router = routers.DefaultRouter()<br>router.register(<span class="hljs-string">&#x27;persons&#x27;</span>, views.PersonViewSet)<br><br>urlpatterns = [<br>    path(<span class="hljs-string">&#x27;admin/&#x27;</span>, admin.site.urls),<br>    path(<span class="hljs-string">&#x27;&#x27;</span>, include(router.urls)),<br>    path(<span class="hljs-string">&#x27;api-auth/&#x27;</span>, include(<span class="hljs-string">&#x27;rest_framework.urls&#x27;</span>, namespace=<span class="hljs-string">&#x27;rest_framework&#x27;</span>))<br>]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>RestFramework</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Django Rest Framework 8 (GenericViewSet)</title>
    <link href="/2022/10/04/RestFramework/DRF8/"/>
    <url>/2022/10/04/RestFramework/DRF8/</url>
    
    <content type="html"><![CDATA[<p>GenericViewSet를 이용하면 매우 짧은코드로 drf를 작동할수있습니다.</p><p>앞선 코드에서 views.py 와 urls.py를 다음과 같이 수정합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic\views.py&#x27;</span><br><br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> generics, mixins<br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> viewsets<br><span class="hljs-keyword">from</span> .serializers <span class="hljs-keyword">import</span> ArticleSerializer<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Article<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ArticleViewSet</span>(viewsets.GenericViewSet, mixins.ListModelMixin, mixins.CreateModelMixin, <br>    mixins.UpdateModelMixin, mixins.RetrieveModelMixin, mixins.DestroyModelMixin):<br>    serializer_class = ArticleSerializer<br>    queryset = Article.objects.<span class="hljs-built_in">all</span>()<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic\urls.py&#x27;</span><br><br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path, include<br><span class="hljs-keyword">from</span> rest_framework.routers <span class="hljs-keyword">import</span> DefaultRouter<br><span class="hljs-keyword">from</span> .views <span class="hljs-keyword">import</span> ArticleViewSet<br><br><br>router = DefaultRouter()<br>router.register(<span class="hljs-string">&#x27;article&#x27;</span>, ArticleViewSet, basename=<span class="hljs-string">&#x27;article&#x27;</span>)<br><br>urlpatterns = [<br>    path(<span class="hljs-string">&#x27;viewset/&#x27;</span>, include(router.urls)),<br>    path(<span class="hljs-string">&#x27;viewset/&lt;int:pk&gt;/&#x27;</span>, include(router.urls)),<br>]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>RestFramework</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Django Rest Framework 7 (ViewSet)</title>
    <link href="/2022/10/04/RestFramework/DRF7/"/>
    <url>/2022/10/04/RestFramework/DRF7/</url>
    
    <content type="html"><![CDATA[<p>ViewSet을 이용한 구현 코드입니다.</p><p>앞에 코드에서 views.py와 urls.py를 다음과 같이 수정 합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic\views.py&#x27;</span><br><br><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> get_object_or_404<br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> viewsets<br><span class="hljs-keyword">from</span> rest_framework.response <span class="hljs-keyword">import</span> Response<br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> status<br><span class="hljs-keyword">from</span> .serializers <span class="hljs-keyword">import</span> ArticleSerializer<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Article<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ArticleViewSet</span>(viewsets.ViewSet):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">list</span>(<span class="hljs-params">self, request</span>):<br>        articles = Article.objects.<span class="hljs-built_in">all</span>()<br>        serializer = ArticleSerializer(articles, many=<span class="hljs-literal">True</span>)<br>        <span class="hljs-keyword">return</span> Response(serializer.data)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">create</span>(<span class="hljs-params">self, request</span>):<br>        serializer = ArticleSerializer(data=request.data)<br>        <span class="hljs-keyword">if</span> serializer.is_valid():<br>            serializer.save()<br>            <span class="hljs-keyword">return</span> Response(serializer.data, status=status.HTTP_201_CREATED)<br>        <span class="hljs-keyword">return</span> Response(serializer.error, status=status.HTTP_400_BAD_REQUEST)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">retrieve</span>(<span class="hljs-params">self, request, pk=<span class="hljs-literal">None</span></span>):<br>        queryset = Article.objects.<span class="hljs-built_in">all</span>()<br>        article = get_object_or_404(queryset, pk=pk)<br>        serializer = ArticleSerializer(article)<br>        <span class="hljs-keyword">return</span> Response(serializer.data)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">update</span>(<span class="hljs-params">self, request, pk=<span class="hljs-literal">None</span></span>):<br>        article = Article.objects.get(pk=pk)<br>        serializer = ArticleSerializer(article, data=request.data)<br>        <span class="hljs-keyword">if</span> serializer.is_valid():<br>            serializer.save()<br>            <span class="hljs-keyword">return</span> Response(serializer.data)<br>        <span class="hljs-keyword">return</span> Response(serializer.error, status=status.HTTP_400_BAD_REQUEST)<br></code></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic\urls.py&#x27;</span><br><br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path, include<br><span class="hljs-keyword">from</span> rest_framework.routers <span class="hljs-keyword">import</span> DefaultRouter<br><span class="hljs-keyword">from</span> .views <span class="hljs-keyword">import</span> ArticleViewSet<br><br><br>router = DefaultRouter()<br>router.register(<span class="hljs-string">&#x27;article&#x27;</span>, ArticleViewSet, basename=<span class="hljs-string">&#x27;article&#x27;</span>)<br><br>urlpatterns = [<br>    path(<span class="hljs-string">&#x27;viewset/&#x27;</span>, include(router.urls)),<br>    path(<span class="hljs-string">&#x27;viewset/&lt;int:pk&gt;/&#x27;</span>, include(router.urls)),<br>]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>RestFramework</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Django Rest Framework 6 (인증)</title>
    <link href="/2022/10/04/RestFramework/DRF6/"/>
    <url>/2022/10/04/RestFramework/DRF6/</url>
    
    <content type="html"><![CDATA[<p>인증 기능을 추가하여 RestFramework를 이용해봅니다.</p><p>views.py에 다음과 같이 authentication, permissions를 추가 해줍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic/views.py&#x27;</span><br><br><span class="hljs-keyword">from</span> .serializers <span class="hljs-keyword">import</span> ArticleSerializer<br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> generics, mixins<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Article<br><span class="hljs-keyword">from</span> rest_framework.authentication <span class="hljs-keyword">import</span> SessionAuthentication, BasicAuthentication, TokenAuthentication<br><span class="hljs-keyword">from</span> rest_framework.permissions <span class="hljs-keyword">import</span> IsAuthenticated<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">GenericAPIView</span>(generics.GenericAPIView, mixins.ListModelMixin, <br>    mixins.CreateModelMixin, mixins.UpdateModelMixin, mixins.RetrieveModelMixin,<br>    mixins.DestroyModelMixin):<br>    serializer_class = ArticleSerializer<br>    queryset = Article.objects.<span class="hljs-built_in">all</span>()<br><br>    lookup_field = <span class="hljs-string">&#x27;id&#x27;</span><br><br>    authentication_classes = [SessionAuthentication, BasicAuthentication, TokenAuthentication]<br>    permission_classes = [IsAuthenticated]<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self, request, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">id</span>:<br>            <span class="hljs-keyword">return</span> self.retrieve(request)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> self.<span class="hljs-built_in">list</span>(request)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">post</span>(<span class="hljs-params">self, request</span>):<br>        <span class="hljs-keyword">return</span> self.create(request)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">put</span>(<span class="hljs-params">self, request, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-keyword">return</span> self.update(request, <span class="hljs-built_in">id</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">self, request, <span class="hljs-built_in">id</span></span>):<br>        <span class="hljs-keyword">return</span> self.destroy(request, <span class="hljs-built_in">id</span>)<br></code></pre></td></tr></table></figure><p>계정을 통한 인증의 경우</p><p>postman 프로그램에서 Authorization을 Basic auth로 설정하고,<br>아이디와 비밀번호를 입력하고 send를 보내면 api가 잘 작동하게됩니다.</p><p>토큰인증의경우<br>settings.py 에 한줄 추가하여 줍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;config/settings.py&#x27;</span><br><br>INSTALLED_APPS = [<br>    ...<br>    <span class="hljs-string">&#x27;rest_framework.authtoken&#x27;</span>,<br>]<br></code></pre></td></tr></table></figure><p>python manage.py migrate 명령을 실행해줍니다.</p><p>admin페이지로 가서 보면 token메뉴가 추가되어있는 것을 확인 할 수 있습니다.</p><p>토큰을 발급받은 뒤</p><p>postman에서 Headers에 키밸류 옵션을 추가하여 send 를 보내면 잘 작동하게 됩니다..<br>key: Authorization, value: token &lt;토큰값&gt;</p>]]></content>
    
    
    <categories>
      
      <category>RestFramework</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Django Rest Framework 5 (제네릭뷰와 mixin)</title>
    <link href="/2022/10/04/RestFramework/DRF5/"/>
    <url>/2022/10/04/RestFramework/DRF5/</url>
    
    <content type="html"><![CDATA[<p>제네릭뷰와 mixin을 사용하여 좀 더 간결하게 사용할 수 있습니다.</p><p>views 파일을 수정해줍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic/views.py&#x27;</span><br><br><span class="hljs-keyword">from</span> .serializers <span class="hljs-keyword">import</span> ArticleSerializer<br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> generics, mixins<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Article<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">GenericAPIView</span>(generics.GenericAPIView, mixins.ListModelMixin, <br>    mixins.CreateModelMixin, mixins.UpdateModelMixin, mixins.RetrieveModelMixin,<br>    mixins.DestroyModelMixin):<br>    serializer_class = ArticleSerializer<br>    queryset = Article.objects.<span class="hljs-built_in">all</span>()<br><br>    lookup_field = <span class="hljs-string">&#x27;id&#x27;</span><br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self, request, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-keyword">if</span> <span class="hljs-built_in">id</span>:<br>            <span class="hljs-keyword">return</span> self.retrieve(request)<br>        <span class="hljs-keyword">else</span>:<br>            <span class="hljs-keyword">return</span> self.<span class="hljs-built_in">list</span>(request)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">post</span>(<span class="hljs-params">self, request</span>):<br>        <span class="hljs-keyword">return</span> self.create(request)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">put</span>(<span class="hljs-params">self, request, <span class="hljs-built_in">id</span>=<span class="hljs-literal">None</span></span>):<br>        <span class="hljs-keyword">return</span> self.update(request, <span class="hljs-built_in">id</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">self, request, <span class="hljs-built_in">id</span></span>):<br>        <span class="hljs-keyword">return</span> self.destroy(request, <span class="hljs-built_in">id</span>)<br></code></pre></td></tr></table></figure><p>urls.py 도 함께 수정해줍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic/urls.py&#x27;</span><br><br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path<br><span class="hljs-keyword">from</span> .views <span class="hljs-keyword">import</span> GenericAPIView<br><br><br>urlpatterns = [<br>    path(<span class="hljs-string">&#x27;generic/article/&#x27;</span>, GenericAPIView.as_view()),<br>    path(<span class="hljs-string">&#x27;generic/article/&lt;int:id&gt;/&#x27;</span>, GenericAPIView.as_view()),<br>]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>RestFramework</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Django Rest Framework 4 (클래스뷰)</title>
    <link href="/2022/10/04/RestFramework/DRF4/"/>
    <url>/2022/10/04/RestFramework/DRF4/</url>
    
    <content type="html"><![CDATA[<p>앞에 views.py 의 함수기반뷰를 Class-based Views로 수정하여 사용할 수 있습니다.</p><p>views 파일을 수정해줍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic/views.py&#x27;</span><br><br><span class="hljs-keyword">from</span> .serializers <span class="hljs-keyword">import</span> ArticleSerializer<br><span class="hljs-keyword">from</span> rest_framework.response <span class="hljs-keyword">import</span> Response<br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> status<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Article<br><span class="hljs-keyword">from</span> rest_framework.views <span class="hljs-keyword">import</span> APIView<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ArticleAPIView</span>(<span class="hljs-title class_ inherited__">APIView</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self, request</span>):<br>        articles = Article.objects.<span class="hljs-built_in">all</span>()<br>        serializer = ArticleSerializer(articles, many=<span class="hljs-literal">True</span>)<br>        <span class="hljs-keyword">return</span> Response(serializer.data)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">post</span>(<span class="hljs-params">self, request</span>):<br>        serializer = ArticleSerializer(data=request.data)<br>        <span class="hljs-keyword">if</span> serializer.is_valid():<br>            serializer.save()<br>            <span class="hljs-keyword">return</span> Response(serializer.data, status=status.HTTP_201_CREATED)<br>        <span class="hljs-keyword">return</span> Response(serializer.error, status=status.HTTP_400_BAD_REQUEST)<br><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ArticleDetails</span>(<span class="hljs-title class_ inherited__">APIView</span>):<br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get_object</span>(<span class="hljs-params">self, <span class="hljs-built_in">id</span></span>):<br>        <span class="hljs-keyword">try</span>:<br>            <span class="hljs-keyword">return</span> Article.objects.get(<span class="hljs-built_in">id</span>=<span class="hljs-built_in">id</span>)<br>        <span class="hljs-keyword">except</span> Article.DoesNotExist:<br>            <span class="hljs-keyword">return</span> Response(status=status.HTTP_404_NOT_FOUND)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">get</span>(<span class="hljs-params">self, request, <span class="hljs-built_in">id</span></span>):<br>        article = self.get_object(<span class="hljs-built_in">id</span>)<br>        serializer = ArticleSerializer(article)<br>        <span class="hljs-keyword">return</span> Response(serializer.data)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">put</span>(<span class="hljs-params">self, request, <span class="hljs-built_in">id</span></span>):<br>        article = self.get_object(<span class="hljs-built_in">id</span>)<br>        serializer = ArticleSerializer(article, data=request.data)<br>        <span class="hljs-keyword">if</span> serializer.is_valid():<br>            serializer.save()<br>            <span class="hljs-keyword">return</span> Response(serializer.data)<br>        <span class="hljs-keyword">return</span> Response(serializer.error, status=status.HTTP_400_BAD_REQUEST)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">delete</span>(<span class="hljs-params">self, request, <span class="hljs-built_in">id</span></span>):<br>        article = self.get_object(<span class="hljs-built_in">id</span>)<br>        article.delete()<br>        <span class="hljs-keyword">return</span> Response(status=status.HTTP_204_NO_CONTENT)<br></code></pre></td></tr></table></figure><p>urls.py 또한 클래스뷰로 수정해줍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic/urls.py&#x27;</span><br><br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path<br><span class="hljs-keyword">from</span> .views <span class="hljs-keyword">import</span> ArticleAPIView, ArticleDetails<br><br>urlpatterns = [<br>    path(<span class="hljs-string">&#x27;article/&#x27;</span>, ArticleAPIView.as_view()),<br>    path(<span class="hljs-string">&#x27;detail/&lt;int:id&gt;/&#x27;</span>, ArticleDetails.as_view()),<br>]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>RestFramework</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Django Rest Framework 3 (Response, status)</title>
    <link href="/2022/10/04/RestFramework/DRF3/"/>
    <url>/2022/10/04/RestFramework/DRF3/</url>
    
    <content type="html"><![CDATA[<p>앞에서 사용되었던 JsonReponse, status 대신<br>Rest Framework 에서 제공되는 Response, status로 사용 할 수 있습니다.</p><p>views 파일을 수정해줍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic/views.py&#x27;</span><br><br><span class="hljs-keyword">from</span> .serializers <span class="hljs-keyword">import</span> ArticleSerializer<br><span class="hljs-keyword">from</span> rest_framework.decorators <span class="hljs-keyword">import</span> api_view<br><span class="hljs-keyword">from</span> rest_framework.response <span class="hljs-keyword">import</span> Response<br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> status<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Article<br><br><br><span class="hljs-meta">@api_view(<span class="hljs-params">[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;POST&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">article_list</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>        articles = Article.objects.<span class="hljs-built_in">all</span>()<br>        serializer = ArticleSerializer(articles, many=<span class="hljs-literal">True</span>)<br>        <span class="hljs-keyword">return</span> Response(serializer.data)<br><br>    <span class="hljs-keyword">elif</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        serializer = ArticleSerializer(data=request.data)<br>        <span class="hljs-keyword">if</span> serializer.is_valid():<br>            serializer.save()<br>            <span class="hljs-keyword">return</span> Response(serializer.data, status=status.HTTP_201_CREATED)<br>        <span class="hljs-keyword">return</span> Response(serializer.error, status=status.HTTP_400_BAD_REQUEST)<br><br><br><span class="hljs-meta">@api_view(<span class="hljs-params">[<span class="hljs-string">&#x27;GET&#x27;</span>, <span class="hljs-string">&#x27;PUT&#x27;</span>, <span class="hljs-string">&#x27;DELETE&#x27;</span>]</span>)</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">article_detail</span>(<span class="hljs-params">request, pk</span>):<br>    <span class="hljs-keyword">try</span>:<br>        article = Article.objects.get(pk=pk)<br>    <span class="hljs-keyword">except</span> Article.DoesNotExist:<br>        <span class="hljs-keyword">return</span> Response(status=status.HTTP_404_NOT_FOUND)<br><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>        serializer = ArticleSerializer(article)<br>        <span class="hljs-keyword">return</span> Response(serializer.data)<br><br>    <span class="hljs-keyword">elif</span> request.method == <span class="hljs-string">&#x27;PUT&#x27;</span>:<br>        serializer = ArticleSerializer(article, data=request.data)<br>        <span class="hljs-keyword">if</span> serializer.is_valid():<br>            serializer.save()<br>            <span class="hljs-keyword">return</span> Response(serializer.data)<br>        <span class="hljs-keyword">return</span> Response(serializer.error, status=status.HTTP_400_BAD_REQUEST)<br><br>    <span class="hljs-keyword">elif</span> request.method == <span class="hljs-string">&#x27;DELETE&#x27;</span>:<br>        article.delete()<br>        <span class="hljs-keyword">return</span> Response(status=status.HTTP_204_NO_CONTENT)<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>RestFramework</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Django Rest Framework 2 (함수기반뷰)</title>
    <link href="/2022/10/04/RestFramework/DRF2/"/>
    <url>/2022/10/04/RestFramework/DRF2/</url>
    
    <content type="html"><![CDATA[<p>Serializer를 ModelSerializer로 변경하면 좀 더 간단하게 구현 할 수 있습니다.</p><p>아래와 같이 수정합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic/serializers.py&#x27;</span><br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ArticleSerializer</span>(serializers.ModelSerializer):<br>    <span class="hljs-keyword">class</span> <span class="hljs-title class_">Meta</span>:<br>        model = Article<br>        fields = [<span class="hljs-string">&#x27;id&#x27;</span>, <span class="hljs-string">&#x27;title&#x27;</span>, <span class="hljs-string">&#x27;author&#x27;</span>, <span class="hljs-string">&#x27;date&#x27;</span>]<br></code></pre></td></tr></table></figure><p>view를 추가해줍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic/views.py&#x27;</span><br><br><span class="hljs-keyword">from</span> django.shortcuts <span class="hljs-keyword">import</span> render<br><span class="hljs-keyword">from</span> django.http <span class="hljs-keyword">import</span> HttpResponse, JsonResponse<br><span class="hljs-keyword">from</span> rest_framework.parsers <span class="hljs-keyword">import</span> JSONParser<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Article<br><span class="hljs-keyword">from</span> .serializers <span class="hljs-keyword">import</span> ArticleSerializer<br><span class="hljs-keyword">from</span> django.views.decorators.csrf <span class="hljs-keyword">import</span> csrf_exempt<br><br><br><span class="hljs-meta">@csrf_exempt</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">article_list</span>(<span class="hljs-params">request</span>):<br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>        articles = Article.objects.<span class="hljs-built_in">all</span>()<br>        serializer = ArticleSerializer(articles, many=<span class="hljs-literal">True</span>)<br>        <span class="hljs-keyword">return</span> JsonResponse(serializer.data, safe=<span class="hljs-literal">False</span>)<br><br>    <span class="hljs-keyword">elif</span> request.method == <span class="hljs-string">&#x27;POST&#x27;</span>:<br>        data = JSONParser().parse(request)<br>        serializer = ArticleSerializer(data=data)<br><br>        <span class="hljs-keyword">if</span> serializer.is_valid():<br>            serializer.save()<br>            <span class="hljs-keyword">return</span> JsonResponse(serializer.data, status=<span class="hljs-number">201</span>)<br>        <span class="hljs-keyword">return</span> JsonResponse(serializer.error, status=<span class="hljs-number">400</span>)<br><br><br><span class="hljs-meta">@csrf_exempt</span><br><span class="hljs-keyword">def</span> <span class="hljs-title function_">article_detail</span>(<span class="hljs-params">request, pk</span>):<br>    <span class="hljs-keyword">try</span>:<br>        article = Article.objects.get(pk=pk)<br>    <span class="hljs-keyword">except</span> Article.DoesNotExist:<br>        <span class="hljs-keyword">return</span> HttpResponse(status=<span class="hljs-number">404</span>)<br><br>    <span class="hljs-keyword">if</span> request.method == <span class="hljs-string">&#x27;GET&#x27;</span>:<br>        serializer = ArticleSerializer(article)<br>        <span class="hljs-keyword">return</span> JsonResponse(serializer.data)<br><br>    <span class="hljs-keyword">elif</span> request.method == <span class="hljs-string">&#x27;PUT&#x27;</span>:<br>        data = JSONParser().parse(request)<br>        serializer = ArticleSerializer(article, data=data)<br>        <span class="hljs-keyword">if</span> serializer.is_valid():<br>            serializer.save()<br>            <span class="hljs-keyword">return</span> JsonResponse(serializer.data)<br>        <span class="hljs-keyword">return</span> JsonResponse(serializer.error, status=<span class="hljs-number">400</span>)<br><br>    <span class="hljs-keyword">elif</span> request.method == <span class="hljs-string">&#x27;DELETE&#x27;</span>:<br>        article.delete()<br>        <span class="hljs-keyword">return</span> HttpResponse(status=<span class="hljs-number">204</span>)<br><br><br><br></code></pre></td></tr></table></figure><p>urls.py에 등록해줍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;config/urls.py&#x27;</span><br><br><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin<br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path, include<br><br>urlpatterns = [<br>    path(<span class="hljs-string">&#x27;admin/&#x27;</span>, admin.site.urls),<br>    path(<span class="hljs-string">&#x27;&#x27;</span>, include(<span class="hljs-string">&#x27;api_basic.urls&#x27;</span>)),<br>]<br></code></pre></td></tr></table></figure><p>api_basic 앱에도 urls.py를 추가해줍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic\urls.py&#x27;</span><br><br><span class="hljs-keyword">from</span> django.urls <span class="hljs-keyword">import</span> path<br><span class="hljs-keyword">from</span> .views <span class="hljs-keyword">import</span> article_list, article_detail<br><br>urlpatterns = [<br>    path(<span class="hljs-string">&#x27;article/&#x27;</span>, article_list),<br>    path(<span class="hljs-string">&#x27;detail/&lt;int:pk&gt;/&#x27;</span>, article_detail),<br>]<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>RestFramework</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>Django Rest Framework 1 (프로젝트, serializer 생성)</title>
    <link href="/2022/10/04/RestFramework/DRF1/"/>
    <url>/2022/10/04/RestFramework/DRF1/</url>
    
    <content type="html"><![CDATA[<p>장고로 프로젝트를 생성하고  <code>api_basic</code> 이름으로 앱을 하나 생성 해주었습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;Terminal&#x27;</span><br><br>&gt; pip install django djangorestframework<br>&gt; django-admin startproject config <br>&gt; python manage.py startapp api_basic <br></code></pre></td></tr></table></figure><p><code>settings.py</code> 파일에 다음을 추가합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;config/settings.py&#x27;</span><br><br>INSTALLED_APPS = [<br>    ...<br>    <span class="hljs-string">&#x27;rest_framework&#x27;</span>,<br>    <span class="hljs-string">&#x27;api_basic&#x27;</span>,<br>]<br></code></pre></td></tr></table></figure><p><code>api_basic</code>앱에서  <code>models.py</code> 파일에 다음을 추가합니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic/models.py&#x27;</span><br><br><span class="hljs-keyword">from</span> django.db <span class="hljs-keyword">import</span> models<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">Article</span>(models.Model):<br>    title = models.CharField(max_length=<span class="hljs-number">100</span>)<br>    author = models.CharField(max_length=<span class="hljs-number">100</span>)<br>    email = models.EmailField(max_length=<span class="hljs-number">100</span>)<br>    date = models.DateTimeField(auto_now_add=<span class="hljs-literal">True</span>)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">__str__</span>(<span class="hljs-params">self</span>):<br>        <span class="hljs-keyword">return</span> self.title<br></code></pre></td></tr></table></figure><p><code>makemigrations</code>과  <code>migrate</code>를 해줍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;Terminal&#x27;</span><br><br>&gt; python manage.py makemigrations<br>&gt; python manage.py migrate<br></code></pre></td></tr></table></figure><p> <code>admin</code>에 <code>Article</code> 모델을 등록 해줍니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic/admin.py&#x27;</span><br><br><span class="hljs-keyword">from</span> django.contrib <span class="hljs-keyword">import</span> admin<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Article<br><br>admin.site.register(Article)<br></code></pre></td></tr></table></figure><p><code>serializers.py</code>를 작성하여 줍니다.</p><p><code>ModelSerializer</code>를 사용하면 좀 더 간단히 구현 할 수 있지만, (장고 폼과 비슷)</p><p>구조파악을 위해 <code>Serializer</code>로 구현하고, 나중에 <code>ModelSerializer</code>로 수정 하겠습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;api_basic/serializers.py&#x27;</span><br><br><span class="hljs-keyword">from</span> rest_framework <span class="hljs-keyword">import</span> serializers<br><span class="hljs-keyword">from</span> .models <span class="hljs-keyword">import</span> Article<br><br><span class="hljs-keyword">class</span> <span class="hljs-title class_">ArticleSerializer</span>(serializers.Serializer):<br>    title = serializers.CharField(max_length=<span class="hljs-number">100</span>)<br>    author = serializers.CharField(max_length=<span class="hljs-number">100</span>)<br>    email = serializers.EmailField(max_length=<span class="hljs-number">100</span>)<br>    date = serializers.DateTimeField()<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">create</span>(<span class="hljs-params">self, validated_data</span>):<br>        <span class="hljs-keyword">return</span> Article.objects.create(validated_data)<br><br>    <span class="hljs-keyword">def</span> <span class="hljs-title function_">update</span>(<span class="hljs-params">self, instance, validated_data</span>):<br>        instance.title = validated_data.get(<span class="hljs-string">&#x27;title&#x27;</span>, instance.title)<br>        instance.author = validated_data.get(<span class="hljs-string">&#x27;author&#x27;</span>, instance.author)<br>        instance.email = validated_data.get(<span class="hljs-string">&#x27;email&#x27;</span>, instance.email)<br>        instance.date = validated_data.get(<span class="hljs-string">&#x27;date&#x27;</span>, instance.date)<br>        instance.save()<br>        <span class="hljs-keyword">return</span> instance<br></code></pre></td></tr></table></figure><p><code>python manage.py shell</code> 명령을 이용하여 다음과 같이 입력해보면</p><p><code>serializer</code>의 기본 컨셉에 대해 알 수 있습니다.</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs python"><span class="hljs-comment"># &#x27;python manage.py shell&#x27;</span><br><br>In [ <span class="hljs-number">1</span>]: <span class="hljs-keyword">from</span> api_basic.models <span class="hljs-keyword">import</span> Article<br>In [ <span class="hljs-number">2</span>]: <span class="hljs-keyword">from</span> api_basic.serializers <span class="hljs-keyword">import</span> ArticleSerializer<br>In [ <span class="hljs-number">3</span>]: <span class="hljs-keyword">from</span> rest_framework.renderers <span class="hljs-keyword">import</span> JSONRenderer<br>In [ <span class="hljs-number">4</span>]: <span class="hljs-keyword">from</span> rest_framework.parsers <span class="hljs-keyword">import</span> JSONParser<br>    <br>In [ <span class="hljs-number">5</span>]: a = Article(title = <span class="hljs-string">&#x27;Article Title&#x27;</span>, author=<span class="hljs-string">&#x27;user1&#x27;</span>, email=<span class="hljs-string">&#x27;user1@gmail.com&#x27;</span>)<br>In [ <span class="hljs-number">6</span>]: a.save()<br>In [ <span class="hljs-number">7</span>]: a = Article(title = <span class="hljs-string">&#x27;New Article&#x27;</span>, author=<span class="hljs-string">&#x27;user2&#x27;</span>, email=<span class="hljs-string">&#x27;user2@gmail.com&#x27;</span>)<br>In [ <span class="hljs-number">8</span>]: a.save()<br>In [ <span class="hljs-number">9</span>]: serializer = ArticleSerializer(a)<br>In [<span class="hljs-number">10</span>]: serializer.data<br>Out[<span class="hljs-number">10</span>]: &#123;<span class="hljs-string">&#x27;title&#x27;</span>: <span class="hljs-string">&#x27;New Article&#x27;</span>, <span class="hljs-string">&#x27;author&#x27;</span>: <span class="hljs-string">&#x27;user2&#x27;</span>, <span class="hljs-string">&#x27;email&#x27;</span>: <span class="hljs-string">&#x27;user2@gmail.com&#x27;</span>, <span class="hljs-string">&#x27;date&#x27;</span>: <span class="hljs-string">&#x27;2020-07-06T02:19:14.115209Z&#x27;</span>&#125;<br><br>In [<span class="hljs-number">11</span>]: content = JSONRenderer().render(serializer.data)<br>In [<span class="hljs-number">12</span>]: content<br>Out[<span class="hljs-number">12</span>]: <span class="hljs-string">b&#x27;&#123;&quot;title&quot;:&quot;New Article&quot;,&quot;author&quot;:&quot;user2&quot;,&quot;email&quot;:&quot;user2@gmail.com&quot;,&quot;date&quot;:&quot;2020-07-06T02:19:14.115209Z&quot;&#125;&#x27;</span><br><br>In [<span class="hljs-number">13</span>]: serializer = ArticleSerializer(Article.objects.<span class="hljs-built_in">all</span>(), many=<span class="hljs-literal">True</span>)<br>In [<span class="hljs-number">14</span>]: serializer.data<br>Out[<span class="hljs-number">14</span>]: [OrderedDict([(<span class="hljs-string">&#x27;title&#x27;</span>, <span class="hljs-string">&#x27;Article Title&#x27;</span>), (<span class="hljs-string">&#x27;author&#x27;</span>, <span class="hljs-string">&#x27;user1&#x27;</span>), (<span class="hljs-string">&#x27;email&#x27;</span>, <br><span class="hljs-string">&#x27;user1@gmail.com&#x27;</span>), (<span class="hljs-string">&#x27;date&#x27;</span>, <span class="hljs-string">&#x27;2020-07-06T02:17:53.606361Z&#x27;</span>)]), OrderedDict([(<span class="hljs-string">&#x27;title&#x27;</span>, <span class="hljs-string">&#x27;New Article&#x27;</span>), (<span class="hljs-string">&#x27;author&#x27;</span>, <span class="hljs-string">&#x27;user2&#x27;</span>), (<span class="hljs-string">&#x27;email&#x27;</span>, <span class="hljs-string">&#x27;user2@gmail.com&#x27;</span>), (<span class="hljs-string">&#x27;date&#x27;</span>, <span class="hljs-string">&#x27;2020-07-06T02:19:14.115209Z&#x27;</span>)])]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>RestFramework</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>javascript01 title</title>
    <link href="/2022/10/04/javascript01/javascript01/"/>
    <url>/2022/10/04/javascript01/javascript01/</url>
    
    <content type="html"><![CDATA[<p><img src="/images/javascript.jpg"></p><h1 id="jquery01-title"><a href="#jquery01-title" class="headerlink" title="jquery01 title"></a>jquery01 title</h1><h1 id="제목1-입니다"><a href="#제목1-입니다" class="headerlink" title="제목1 입니다"></a>제목1 입니다</h1><h2 id="제목2-입니다"><a href="#제목2-입니다" class="headerlink" title="제목2 입니다"></a>제목2 입니다</h2><h3 id="제목3-입니다"><a href="#제목3-입니다" class="headerlink" title="제목3 입니다"></a>제목3 입니다</h3><h4 id="제목4-입니다"><a href="#제목4-입니다" class="headerlink" title="제목4 입니다"></a>제목4 입니다</h4><h5 id="제목5-입니다"><a href="#제목5-입니다" class="headerlink" title="제목5 입니다"></a>제목5 입니다</h5><h6 id="제목6-입니다"><a href="#제목6-입니다" class="headerlink" title="제목6 입니다"></a>제목6 입니다</h6><p>글내용입니다 테스트용입니다</p><p>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다</p><p>#hello!!</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// program to find the factorial of a number</span><br><br><span class="hljs-comment">// take input from the user</span><br><span class="hljs-keyword">const</span> number = <span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;Enter a positive integer: &#x27;</span>));<br><br><span class="hljs-comment">// checking if number is negative</span><br><span class="hljs-keyword">if</span> (number &lt; <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Error! Factorial for negative number does not exist.&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">// if number is 0</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (number === <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`The factorial of <span class="hljs-subst">$&#123;number&#125;</span> is 1.`</span>);<br>&#125;<br><br><span class="hljs-comment">// if number is positive</span><br><span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">let</span> fact = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= number; i++) &#123;<br>        fact *= i;<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`The factorial of <span class="hljs-subst">$&#123;number&#125;</span> is <span class="hljs-subst">$&#123;fact&#125;</span>.`</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>javascript01</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tag01</tag>
      
      <tag>tag02</tag>
      
      <tag>tag03</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>type01 title</title>
    <link href="/2022/10/02/javascript01/typescript/type01/"/>
    <url>/2022/10/02/javascript01/typescript/type01/</url>
    
    <content type="html"><![CDATA[<h1 id="type01-title"><a href="#type01-title" class="headerlink" title="type01 title"></a>type01 title</h1><h1 id="제목1-입니다"><a href="#제목1-입니다" class="headerlink" title="제목1 입니다"></a>제목1 입니다</h1><h2 id="제목2-입니다"><a href="#제목2-입니다" class="headerlink" title="제목2 입니다"></a>제목2 입니다</h2><h3 id="제목3-입니다"><a href="#제목3-입니다" class="headerlink" title="제목3 입니다"></a>제목3 입니다</h3><h4 id="제목4-입니다"><a href="#제목4-입니다" class="headerlink" title="제목4 입니다"></a>제목4 입니다</h4><h5 id="제목5-입니다"><a href="#제목5-입니다" class="headerlink" title="제목5 입니다"></a>제목5 입니다</h5><h6 id="제목6-입니다"><a href="#제목6-입니다" class="headerlink" title="제목6 입니다"></a>제목6 입니다</h6><p>글내용입니다 테스트용입니다</p><p>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다</p><p>#hello!!</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// program to find the factorial of a number</span><br><br><span class="hljs-comment">// take input from the user</span><br><span class="hljs-keyword">const</span> number = <span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;Enter a positive integer: &#x27;</span>));<br><br><span class="hljs-comment">// checking if number is negative</span><br><span class="hljs-keyword">if</span> (number &lt; <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Error! Factorial for negative number does not exist.&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">// if number is 0</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (number === <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`The factorial of <span class="hljs-subst">$&#123;number&#125;</span> is 1.`</span>);<br>&#125;<br><br><span class="hljs-comment">// if number is positive</span><br><span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">let</span> fact = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= number; i++) &#123;<br>        fact *= i;<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`The factorial of <span class="hljs-subst">$&#123;number&#125;</span> is <span class="hljs-subst">$&#123;fact&#125;</span>.`</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>javascript01</category>
      
      <category>typescript</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tag01</tag>
      
      <tag>tag02</tag>
      
      <tag>tag03</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>jquery01 title</title>
    <link href="/2022/10/02/javascript01/jquery/jquery01/"/>
    <url>/2022/10/02/javascript01/jquery/jquery01/</url>
    
    <content type="html"><![CDATA[<h1 id="jquery01-title"><a href="#jquery01-title" class="headerlink" title="jquery01 title"></a>jquery01 title</h1><h1 id="제목1-입니다"><a href="#제목1-입니다" class="headerlink" title="제목1 입니다"></a>제목1 입니다</h1><h2 id="제목2-입니다"><a href="#제목2-입니다" class="headerlink" title="제목2 입니다"></a>제목2 입니다</h2><h3 id="제목3-입니다"><a href="#제목3-입니다" class="headerlink" title="제목3 입니다"></a>제목3 입니다</h3><h4 id="제목4-입니다"><a href="#제목4-입니다" class="headerlink" title="제목4 입니다"></a>제목4 입니다</h4><h5 id="제목5-입니다"><a href="#제목5-입니다" class="headerlink" title="제목5 입니다"></a>제목5 입니다</h5><h6 id="제목6-입니다"><a href="#제목6-입니다" class="headerlink" title="제목6 입니다"></a>제목6 입니다</h6><p>글내용입니다 테스트용입니다</p><p>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다</p><p>#hello!!</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// program to find the factorial of a number</span><br><br><span class="hljs-comment">// take input from the user</span><br><span class="hljs-keyword">const</span> number = <span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;Enter a positive integer: &#x27;</span>));<br><br><span class="hljs-comment">// checking if number is negative</span><br><span class="hljs-keyword">if</span> (number &lt; <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Error! Factorial for negative number does not exist.&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">// if number is 0</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (number === <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`The factorial of <span class="hljs-subst">$&#123;number&#125;</span> is 1.`</span>);<br>&#125;<br><br><span class="hljs-comment">// if number is positive</span><br><span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">let</span> fact = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= number; i++) &#123;<br>        fact *= i;<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`The factorial of <span class="hljs-subst">$&#123;number&#125;</span> is <span class="hljs-subst">$&#123;fact&#125;</span>.`</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>javascript01</category>
      
      <category>jquery</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tag01</tag>
      
      <tag>tag02</tag>
      
      <tag>tag03</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2022/10/02/hello-world/"/>
    <url>/2022/10/02/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  <entry>
    <title>post01</title>
    <link href="/2022/10/02/post01/"/>
    <url>/2022/10/02/post01/</url>
    
    <content type="html"><![CDATA[<h1 id="제목1-입니다"><a href="#제목1-입니다" class="headerlink" title="제목1 입니다"></a>제목1 입니다</h1><h2 id="제목2-입니다"><a href="#제목2-입니다" class="headerlink" title="제목2 입니다"></a>제목2 입니다</h2><h3 id="제목3-입니다"><a href="#제목3-입니다" class="headerlink" title="제목3 입니다"></a>제목3 입니다</h3><h4 id="제목4-입니다"><a href="#제목4-입니다" class="headerlink" title="제목4 입니다"></a>제목4 입니다</h4><h5 id="제목5-입니다"><a href="#제목5-입니다" class="headerlink" title="제목5 입니다"></a>제목5 입니다</h5><h6 id="제목6-입니다"><a href="#제목6-입니다" class="headerlink" title="제목6 입니다"></a>제목6 입니다</h6><p>글내용입니다 테스트용입니다</p><p>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다<br>글내용입니다 테스트용입니다</p><p>#hello!!</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">// program to find the factorial of a number</span><br><br><span class="hljs-comment">// take input from the user</span><br><span class="hljs-keyword">const</span> number = <span class="hljs-built_in">parseInt</span>(<span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;Enter a positive integer: &#x27;</span>));<br><br><span class="hljs-comment">// checking if number is negative</span><br><span class="hljs-keyword">if</span> (number &lt; <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Error! Factorial for negative number does not exist.&#x27;</span>);<br>&#125;<br><br><span class="hljs-comment">// if number is 0</span><br><span class="hljs-keyword">else</span> <span class="hljs-keyword">if</span> (number === <span class="hljs-number">0</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`The factorial of <span class="hljs-subst">$&#123;number&#125;</span> is 1.`</span>);<br>&#125;<br><br><span class="hljs-comment">// if number is positive</span><br><span class="hljs-keyword">else</span> &#123;<br>    <span class="hljs-keyword">let</span> fact = <span class="hljs-number">1</span>;<br>    <span class="hljs-keyword">for</span> (i = <span class="hljs-number">1</span>; i &lt;= number; i++) &#123;<br>        fact *= i;<br>    &#125;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">`The factorial of <span class="hljs-subst">$&#123;number&#125;</span> is <span class="hljs-subst">$&#123;fact&#125;</span>.`</span>);<br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>cat01</category>
      
      <category>cat03</category>
      
    </categories>
    
    
    <tags>
      
      <tag>tag01</tag>
      
      <tag>tag02</tag>
      
      <tag>tag03</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>01. 파일이름, 파일경로 알아내기</title>
    <link href="/2019/10/28/NodeJS/01.%20%ED%8C%8C%EC%9D%BC%EC%9D%B4%EB%A6%84%20%ED%8C%8C%EC%9D%BC%EA%B2%BD%EB%A1%9C%20%EC%95%8C%EC%95%84%EB%82%B4%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/01.%20%ED%8C%8C%EC%9D%BC%EC%9D%B4%EB%A6%84%20%ED%8C%8C%EC%9D%BC%EA%B2%BD%EB%A1%9C%20%EC%95%8C%EC%95%84%EB%82%B4%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>파일이름, 파일경로 알아내기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;파일이름 : %s&#x27;</span>, __filename)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;파일경로 : %s&#x27;</span>, __dirname)<br></code></pre></td></tr></table></figure><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs maxima">파일이름 : c:\work\<span class="hljs-built_in">example</span>\node_easyspub\<span class="hljs-built_in">example</span>.js<br>파일경로 : c:\work\<span class="hljs-built_in">example</span>\node_easyspub<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>03. console.time</title>
    <link href="/2019/10/28/NodeJS/03.%20console%20time/"/>
    <url>/2019/10/28/NodeJS/03.%20console%20time/</url>
    
    <content type="html"><![CDATA[<p>console.time : 실행시 걸린시간을 표시해줍니다.</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">time</span>(<span class="hljs-string">&#x27;duration_time&#x27;</span>)<br><br><span class="hljs-keyword">var</span> result = <span class="hljs-number">0</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i = <span class="hljs-number">0</span>; i &lt; <span class="hljs-number">10000</span>; i++) &#123;<br>    result += i<br>&#125;<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">timeEnd</span>(<span class="hljs-string">&#x27;duration_time&#x27;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">duration_time</span>: <span class="hljs-number">0</span>.<span class="hljs-number">400</span>ms<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>02. console 객체 사용하기</title>
    <link href="/2019/10/28/NodeJS/02.%20console%20%EA%B0%9D%EC%B2%B4/"/>
    <url>/2019/10/28/NodeJS/02.%20console%20%EA%B0%9D%EC%B2%B4/</url>
    
    <content type="html"><![CDATA[<p>console 객체 사용하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;안녕하세요&#x27;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;숫자입니다. %d&#x27;</span>, <span class="hljs-number">10</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;문자열입니다. %s&#x27;</span>, <span class="hljs-string">&#x27;안녕&#x27;</span>)<br><br><span class="hljs-keyword">var</span> person = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;소녀시대&#x27;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">20</span><br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;자바스크립트 객체 입니다. %j&#x27;</span>, person)<br><br><span class="hljs-comment">// 객체 속성 확인</span><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(person)<br></code></pre></td></tr></table></figure><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs css">안녕하세요<br>숫자입니다. <span class="hljs-number">10</span><br>문자열입니다. 안녕<br>자바스크립트 객체 입니다. &#123;&quot;name&quot;:<span class="hljs-string">&quot;홍길동&quot;</span>,<span class="hljs-string">&quot;age&quot;</span>:<span class="hljs-number">20</span>&#125;<br>&#123; name: <span class="hljs-string">&#x27;홍길동&#x27;</span>, age: <span class="hljs-number">20</span> &#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>04. 모듈로 분리하기</title>
    <link href="/2019/10/28/NodeJS/04.%20%EB%AA%A8%EB%93%88%EB%A1%9C%20%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/04.%20%EB%AA%A8%EB%93%88%EB%A1%9C%20%EB%B6%84%EB%A6%AC%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<h3 id="같은-파일에서-모듈-분리하기"><a href="#같은-파일에서-모듈-분리하기" class="headerlink" title="같은 파일에서 모듈 분리하기"></a>같은 파일에서 모듈 분리하기</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-keyword">var</span> calc = &#123;&#125;<br><br>calc.<span class="hljs-property">add</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">a,b</span>) &#123;<br>    <span class="hljs-keyword">return</span> a+b<br>&#125;<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;모듈로 분리하기 전 - calc.add:&#x27;</span> + calc.<span class="hljs-title function_">add</span>(<span class="hljs-number">10</span>, <span class="hljs-number">20</span>))<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">모듈로 분리하기 전 - calc.<span class="hljs-keyword">add</span>:<span class="hljs-number">30</span><br></code></pre></td></tr></table></figure><h3 id="다른-파일로-모듈-분리하기"><a href="#다른-파일로-모듈-분리하기" class="headerlink" title="다른 파일로 모듈 분리하기"></a>다른 파일로 모듈 분리하기</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// calc.js</span><br><span class="hljs-built_in">exports</span>.<span class="hljs-property">add</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> a + b<br>&#125;<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// main.js</span><br><span class="hljs-keyword">var</span> calc = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./calc&#x27;</span>)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;모듈로 분리한 후 - calc.add : &#x27;</span> + calc.<span class="hljs-title function_">add</span>(<span class="hljs-number">20</span>, <span class="hljs-number">20</span>))<br></code></pre></td></tr></table></figure><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">모듈로 분리한 후 - calc.<span class="hljs-built_in">add</span> : 40<br></code></pre></td></tr></table></figure><h3 id="다른-파일로-모듈-분리하기2"><a href="#다른-파일로-모듈-분리하기2" class="headerlink" title="다른 파일로 모듈 분리하기2"></a>다른 파일로 모듈 분리하기2</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// calc2.js</span><br><span class="hljs-keyword">var</span> calc = &#123;&#125;<br><br>calc.<span class="hljs-property">add</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> a + b<br>&#125;<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = calc<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// main2.js</span><br><span class="hljs-keyword">var</span> calc2 = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./calc2&#x27;</span>)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;모듈로 분리한 후 - calc2.add: &#x27;</span> + calc2.<span class="hljs-title function_">add</span>(<span class="hljs-number">30</span>, <span class="hljs-number">30</span>))<br></code></pre></td></tr></table></figure><figure class="highlight csharp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs csharp">모듈로 분리한 후 - calc2.<span class="hljs-keyword">add</span>: <span class="hljs-number">60</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>05. 변수에 함수 할당하기</title>
    <link href="/2019/10/28/NodeJS/05.%20%EB%B3%80%EC%88%98%EC%97%90%20%ED%95%A8%EC%88%98%20%ED%95%A0%EB%8B%B9%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/05.%20%EB%B3%80%EC%88%98%EC%97%90%20%ED%95%A8%EC%88%98%20%ED%95%A0%EB%8B%B9%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>변수에 함수 할당하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 변수에 함수 할당하기</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> a + b<br>&#125;<br><br><span class="hljs-keyword">var</span> result = <span class="hljs-title function_">add</span>(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;더하기 결과 : &#x27;</span> + result )<br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">더하기 결과 : 20<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 변수에 함수 할당하기2</span><br><br><span class="hljs-keyword">var</span> add2 = <span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> a + b<br>&#125;<br><br><span class="hljs-keyword">var</span> result = <span class="hljs-title function_">add2</span>(<span class="hljs-number">10</span>, <span class="hljs-number">10</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;더하기 결과 : &#x27;</span> + result )<br></code></pre></td></tr></table></figure><figure class="highlight ada"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ada">더하기 결과 : 20<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>06. 객체 안에 함수 넣기</title>
    <link href="/2019/10/28/NodeJS/06.%20%EA%B0%9D%EC%B2%B4%20%EC%95%88%EC%97%90%20%ED%95%A8%EC%88%98%20%EB%84%A3%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/06.%20%EA%B0%9D%EC%B2%B4%20%EC%95%88%EC%97%90%20%ED%95%A8%EC%88%98%20%EB%84%A3%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>객체 안에 함수 넣기1</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 객체 안에 함수 넣기</span><br><br><span class="hljs-keyword">var</span> person = &#123;&#125;<br><br>person.<span class="hljs-property">name</span> = <span class="hljs-string">&#x27;홍길동&#x27;</span><br>person[<span class="hljs-string">&#x27;age&#x27;</span>] = <span class="hljs-number">20</span><br>person.<span class="hljs-property">add</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> a + b<br>&#125;<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;더하기: &#x27;</span> + person.<span class="hljs-title function_">add</span>(<span class="hljs-number">20</span>, <span class="hljs-number">20</span>))<br></code></pre></td></tr></table></figure><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">더하기: 40</span><br></code></pre></td></tr></table></figure><p>객체 안에 함수 넣기2</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 객체 안에 함수 넣기2</span><br><br><span class="hljs-keyword">var</span> person = &#123;<br>    <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동&#x27;</span>,<br>    <span class="hljs-attr">age</span>: <span class="hljs-number">20</span>,<br>    <span class="hljs-attr">add</span>: <span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) &#123;<br>        <span class="hljs-keyword">return</span> a + b<br>    &#125;<br>&#125;<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;더하기: &#x27;</span> + person.<span class="hljs-title function_">add</span>(<span class="hljs-number">40</span>, <span class="hljs-number">40</span>))<br></code></pre></td></tr></table></figure><figure class="highlight makefile"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs makefile"><span class="hljs-section">더하기: 80</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>07. 배열 및 원소 추가하기</title>
    <link href="/2019/10/28/NodeJS/07.%20%EB%B0%B0%EC%97%B4%20%EB%B0%8F%20%EC%9B%90%EC%86%8C%20%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/07.%20%EB%B0%B0%EC%97%B4%20%EB%B0%8F%20%EC%9B%90%EC%86%8C%20%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>배열 및 원소 추가하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 배열</span><br><span class="hljs-keyword">var</span> users = [<span class="hljs-string">&#x27;홍길동1&#x27;</span>, <span class="hljs-string">&#x27;홍길동2&#x27;</span>, <span class="hljs-string">&#x27;홍길동3&#x27;</span>]<br><br><span class="hljs-keyword">var</span> users = [&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;홍길동1&#x27;</span>, <span class="hljs-attr">age</span>:<span class="hljs-number">20</span>&#125;, &#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;홍길동2&#x27;</span>, <span class="hljs-attr">age</span>:<span class="hljs-number">25</span>&#125;]<br><br><span class="hljs-comment">// 원소 추가하기</span><br>users.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;홍길동3&#x27;</span>, <span class="hljs-attr">age</span>:<span class="hljs-number">28</span>&#125;)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;사용자 수: &#x27;</span> + users.<span class="hljs-property">length</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;첫번째 사용자 이름: &#x27;</span> + users[<span class="hljs-number">0</span>].<span class="hljs-property">name</span>)<br></code></pre></td></tr></table></figure><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">사용자 수</span><span class="hljs-punctuation">:</span> <span class="hljs-string">3</span><br><span class="hljs-attribute">첫번째 사용자 이름</span><span class="hljs-punctuation">:</span> <span class="hljs-string">홍길동1</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>08. 배열에 함수 추가하기</title>
    <link href="/2019/10/28/NodeJS/08.%20%EB%B0%B0%EC%97%B4%EC%97%90%20%ED%95%A8%EC%88%98%20%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/08.%20%EB%B0%B0%EC%97%B4%EC%97%90%20%ED%95%A8%EC%88%98%20%EC%B6%94%EA%B0%80%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>배열, 배열 추가하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 배열에 함수 추가하기</span><br><span class="hljs-keyword">var</span> users = [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동2&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">22</span> &#125;]<br><br><span class="hljs-keyword">var</span> oper = <span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> a + b<br>&#125;<br><br>users.<span class="hljs-title function_">push</span>(oper)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(users)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;세번째 배열 요소를 함수로 실행: &#x27;</span> + users[<span class="hljs-number">2</span>](<span class="hljs-number">10</span>,<span class="hljs-number">10</span>))<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">[ &#123; <span class="hljs-type">name</span>: <span class="hljs-string">&#x27;홍길동&#x27;</span>, age: <span class="hljs-number">20</span> &#125;,<br>  &#123; <span class="hljs-type">name</span>: <span class="hljs-string">&#x27;홍길동2&#x27;</span>, age: <span class="hljs-number">22</span> &#125;,<br>  [<span class="hljs-keyword">Function</span>: oper] ]<br>세번째 배열 요소를 함수로 실행: <span class="hljs-number">20</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>09. 배열에서 for문 활용하기</title>
    <link href="/2019/10/28/NodeJS/09.%20%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C%20for%EB%AC%B8%20%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/09.%20%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C%20for%EB%AC%B8%20%ED%99%9C%EC%9A%A9%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>배열에 for문 활용하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 배열에 for문 활용하기</span><br><br><span class="hljs-keyword">var</span> users = [<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동2&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">22</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동3&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">24</span> &#125;<br>]<br><br><span class="hljs-comment">// C style for문</span><br><span class="hljs-keyword">for</span> (<span class="hljs-keyword">var</span> i=<span class="hljs-number">0</span>; i&lt;users.<span class="hljs-property">length</span>; i++)&#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;배열 원소 #&#x27;</span> + i + <span class="hljs-string">&#x27; : &#x27;</span> + users[i].<span class="hljs-property">name</span>)<br>&#125;<br><br><span class="hljs-comment">// forEach문</span><br>users.<span class="hljs-title function_">forEach</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params">elem, index</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;배열 원소 #&#x27;</span> + index + <span class="hljs-string">&#x27; : &#x27;</span> + elem.<span class="hljs-property">name</span>)<br>&#125;)<br></code></pre></td></tr></table></figure><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs 1c">배열 원소 <span class="hljs-meta">#0 : 홍길동</span><br>배열 원소 <span class="hljs-meta">#1 : 홍길동2</span><br>배열 원소 <span class="hljs-meta">#2 : 홍길동3</span><br>배열 원소 <span class="hljs-meta">#0 : 홍길동</span><br>배열 원소 <span class="hljs-meta">#1 : 홍길동2</span><br>배열 원소 <span class="hljs-meta">#2 : 홍길동3</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>10. 배열에서 push, pop 사용하기</title>
    <link href="/2019/10/28/NodeJS/10.%20%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C%20push,%20pop%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/10.%20%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C%20push,%20pop%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>배열에 push, pop 사용하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 배열에 push, pop 사용하기</span><br><br><span class="hljs-keyword">var</span> users = [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동2&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">25</span> &#125;]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;배열 원소의 개수: &#x27;</span> + users.<span class="hljs-property">length</span>)<br><br><span class="hljs-comment">// push : 배열에 원소 추가하기</span><br>users.<span class="hljs-title function_">push</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;홍길동3&#x27;</span>, <span class="hljs-attr">age</span>:<span class="hljs-number">28</span>&#125;)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;배열 원소의 개수: &#x27;</span> + users.<span class="hljs-property">length</span>)<br><br><span class="hljs-comment">// pop : 마지막 원소 꺼내기</span><br><span class="hljs-keyword">var</span> elem = users.<span class="hljs-title function_">pop</span>()<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;배열 원소의 개수: &#x27;</span> + users.<span class="hljs-property">length</span>)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;pop 으로 꺼낸 세번째 원소&#x27;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(elem)<br></code></pre></td></tr></table></figure><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">배열 원소의 개수</span><span class="hljs-punctuation">:</span> <span class="hljs-string">2</span><br><span class="hljs-attribute">배열 원소의 개수</span><span class="hljs-punctuation">:</span> <span class="hljs-string">3</span><br><span class="hljs-attribute">배열 원소의 개수</span><span class="hljs-punctuation">:</span> <span class="hljs-string">2</span><br><span class="hljs-attribute">pop 으로 꺼낸 세번째 원소</span><br><span class="hljs-attribute">&#123; name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;홍길동3&#x27;, age: 28 &#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>13. 배열에서 splice 사용하기</title>
    <link href="/2019/10/28/NodeJS/13.%20%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C%20splice%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/13.%20%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C%20splice%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>배열에서 splice 사용하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 배열에서 splice 사용하기</span><br><br><span class="hljs-keyword">var</span> users = [<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동1&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">22</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동2&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">24</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동3&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">29</span> &#125;<br>]<br><br><span class="hljs-comment">// splice로 원소 추가하기</span><br>users.<span class="hljs-title function_">splice</span>(<span class="hljs-number">1</span>, <span class="hljs-number">0</span>, &#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;홍길동4&#x27;</span>, <span class="hljs-attr">age</span>:<span class="hljs-number">32</span>&#125;)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(users)<br><br><span class="hljs-comment">// splice로 원소 삭제하기, 2번인덱스부터 1개를 삭제함</span><br>users.<span class="hljs-title function_">splice</span>(<span class="hljs-number">2</span>,<span class="hljs-number">1</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(users)<br></code></pre></td></tr></table></figure><figure class="highlight scheme"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs scheme">[ &#123; name: <span class="hljs-symbol">&#x27;홍길동1</span>&#x27;, age: <span class="hljs-number">22</span> &#125;,<br>  &#123; name: <span class="hljs-symbol">&#x27;홍길동4</span>&#x27;, age: <span class="hljs-number">32</span> &#125;,<br>  &#123; name: <span class="hljs-symbol">&#x27;홍길동2</span>&#x27;, age: <span class="hljs-number">24</span> &#125;,<br>  &#123; name: <span class="hljs-symbol">&#x27;홍길동3</span>&#x27;, age: <span class="hljs-number">29</span> &#125; ]<br>[ &#123; name: <span class="hljs-symbol">&#x27;홍길동1</span>&#x27;, age: <span class="hljs-number">22</span> &#125;,<br>  &#123; name: <span class="hljs-symbol">&#x27;홍길동4</span>&#x27;, age: <span class="hljs-number">32</span> &#125;,<br>  &#123; name: <span class="hljs-symbol">&#x27;홍길동3</span>&#x27;, age: <span class="hljs-number">29</span> &#125; ]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>11. 배열에 unshift, shift 사용하기</title>
    <link href="/2019/10/28/NodeJS/11.%20%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C%20unshift%20shift%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/11.%20%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C%20unshift%20shift%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>배열에서 unshift, shift 사용하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 배열에 unshift, shift 사용하기</span><br><br><span class="hljs-keyword">var</span> users = [&#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동2&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">20</span> &#125;, &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동3&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">25</span> &#125;]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;배열 원소의 개수: &#x27;</span> + users.<span class="hljs-property">length</span>)<br><br><span class="hljs-comment">// unshift : 배열의 첫번째 원소 추가하기</span><br>users.<span class="hljs-title function_">unshift</span>(&#123;<span class="hljs-attr">name</span>:<span class="hljs-string">&#x27;홍길동1&#x27;</span>, <span class="hljs-attr">age</span>:<span class="hljs-number">28</span>&#125;)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;배열 원소의 개수: &#x27;</span> + users.<span class="hljs-property">length</span>)<br><br><span class="hljs-comment">// shift : 배열의 첫번째 원소 꺼내기</span><br><span class="hljs-keyword">var</span> elem = users.<span class="hljs-title function_">shift</span>()<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;배열 원소의 개수: &#x27;</span> + users.<span class="hljs-property">length</span>)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;shift로 꺼낸 첫번째 원소&#x27;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(elem)<br><br></code></pre></td></tr></table></figure><figure class="highlight nestedtext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs nestedtext"><span class="hljs-attribute">배열 원소의 개수</span><span class="hljs-punctuation">:</span> <span class="hljs-string">2</span><br><span class="hljs-attribute">배열 원소의 개수</span><span class="hljs-punctuation">:</span> <span class="hljs-string">3</span><br><span class="hljs-attribute">배열 원소의 개수</span><span class="hljs-punctuation">:</span> <span class="hljs-string">2</span><br><span class="hljs-attribute">shift로 꺼낸 첫번째 원소</span><br><span class="hljs-attribute">&#123; name</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&#x27;홍길동1&#x27;, age: 28 &#125;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>12. 배열에서 delete 사용하기</title>
    <link href="/2019/10/28/NodeJS/12.%20%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C%20delete%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/12.%20%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C%20delete%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>배열에서 delete 사용하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 배열에서 delete 사용하기</span><br><br><span class="hljs-keyword">var</span> users = [<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동1&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">22</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동2&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">24</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동3&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">29</span> &#125;<br>]<br><br><span class="hljs-comment">// delete : 원소는 삭제되나 자리는 남아있습니다..</span><br><span class="hljs-comment">// splice를 사용하면 자리까지 삭제됩니다.</span><br><span class="hljs-keyword">delete</span> users[<span class="hljs-number">1</span>]<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(users)<br></code></pre></td></tr></table></figure><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xquery">[ &#123;<span class="hljs-built_in"> name</span>: <span class="hljs-string">&#x27;홍길동1&#x27;</span>, age: <span class="hljs-number">22</span> &#125;,<br>  &lt;<span class="hljs-number">1</span><span class="hljs-built_in"> empty</span> <span class="hljs-type">item</span>&gt;,<br>  &#123;<span class="hljs-built_in"> name</span>: <span class="hljs-string">&#x27;홍길동3&#x27;</span>, age: <span class="hljs-number">29</span> &#125; ]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>14. 배열에서 slice 사용하기</title>
    <link href="/2019/10/28/NodeJS/14.%20%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C%20slice%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/14.%20%EB%B0%B0%EC%97%B4%EC%97%90%EC%84%9C%20slice%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>배열에서 slice 사용하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 배열에서 slice 사용하기</span><br><br><span class="hljs-keyword">var</span> users = [<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동1&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">22</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동2&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">24</span> &#125;,<br>    &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동3&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">29</span> &#125;<br>]<br><br><span class="hljs-comment">// 1번 인덱스를 복제합니다</span><br><span class="hljs-keyword">var</span> users2 = users.<span class="hljs-title function_">slice</span>(<span class="hljs-number">1</span>,<span class="hljs-number">2</span>)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;users 객체&#x27;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(users)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;users2 객체&#x27;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(users2)<br></code></pre></td></tr></table></figure><figure class="highlight pgsql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs pgsql">users 객체<br>[ &#123; <span class="hljs-type">name</span>: <span class="hljs-string">&#x27;홍길동1&#x27;</span>, age: <span class="hljs-number">22</span> &#125;,<br>  &#123; <span class="hljs-type">name</span>: <span class="hljs-string">&#x27;홍길동2&#x27;</span>, age: <span class="hljs-number">24</span> &#125;,<br>  &#123; <span class="hljs-type">name</span>: <span class="hljs-string">&#x27;홍길동3&#x27;</span>, age: <span class="hljs-number">29</span> &#125; ]<br>users2 객체<br>[ &#123; <span class="hljs-type">name</span>: <span class="hljs-string">&#x27;홍길동2&#x27;</span>, age: <span class="hljs-number">24</span> &#125; ]<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>15. callback 함수</title>
    <link href="/2019/10/28/NodeJS/15.%20callback%20%ED%95%A8%EC%88%98/"/>
    <url>/2019/10/28/NodeJS/15.%20callback%20%ED%95%A8%EC%88%98/</url>
    
    <content type="html"><![CDATA[<p>callback 함수</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// callback 함수</span><br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">add</span>(<span class="hljs-params">a, b, callback</span>) &#123;<br>    <span class="hljs-keyword">var</span> result = a + b<br>    <span class="hljs-title function_">callback</span>(result)<br>&#125;<br><br><span class="hljs-title function_">add</span>(<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">result</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;더하기 결과(콜백함수 안에서): &#x27;</span> + result)<br>&#125;)<br><br></code></pre></td></tr></table></figure><figure class="highlight gcode"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs gcode">더하기 결과<span class="hljs-comment">(콜백함수 안에서)</span>: <span class="hljs-number">30</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>16. prototype 사용하기</title>
    <link href="/2019/10/28/NodeJS/16.%20prototype%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/16.%20prototype%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>prototype 사용하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// prototype 사용하기</span><br><br><span class="hljs-keyword">var</span> person1 = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동1&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">21</span> &#125;<br><span class="hljs-keyword">var</span> person2 = &#123; <span class="hljs-attr">name</span>: <span class="hljs-string">&#x27;홍길동2&#x27;</span>, <span class="hljs-attr">age</span>: <span class="hljs-number">22</span> &#125;<br><br><span class="hljs-keyword">function</span> <span class="hljs-title function_">Person</span>(<span class="hljs-params">name, age</span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">name</span> = name<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-property">age</span> = age<br>&#125;<br><br><span class="hljs-title class_">Person</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">walk</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">speed</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(speed + <span class="hljs-string">&#x27;km 속도로 걸어갑니다.&#x27;</span>)<br>&#125;<br><br><span class="hljs-keyword">var</span> person3 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>(<span class="hljs-string">&#x27;홍길동3&#x27;</span>, <span class="hljs-number">23</span>)<br><span class="hljs-keyword">var</span> person4 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Person</span>(<span class="hljs-string">&#x27;홍길동4&#x27;</span>, <span class="hljs-number">24</span>)<br><br>person3.<span class="hljs-title function_">walk</span>(<span class="hljs-number">10</span>)<br>person4.<span class="hljs-title function_">walk</span>(<span class="hljs-number">20</span>)<br><br></code></pre></td></tr></table></figure><figure class="highlight erlang"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs erlang"><span class="hljs-number">10</span>km 속도로 걸어갑니다.<br><span class="hljs-number">20</span>km 속도로 걸어갑니다.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>17. url, querystring 모듈</title>
    <link href="/2019/10/28/NodeJS/17.%20url,%20querystring%20%EB%AA%A8%EB%93%88/"/>
    <url>/2019/10/28/NodeJS/17.%20url,%20querystring%20%EB%AA%A8%EB%93%88/</url>
    
    <content type="html"><![CDATA[<p>url, querystring 모듈</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// url 모듈 : url 주소를 분석합니다</span><br><span class="hljs-keyword">var</span> url = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;url&#x27;</span>)<br><br><span class="hljs-keyword">var</span> urlStr =<br>    <span class="hljs-string">&#x27;https://search.naver.com/search.naver?sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=popcorn&#x27;</span><br><span class="hljs-keyword">var</span> curUrl = url.<span class="hljs-title function_">parse</span>(urlStr)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">dir</span>(curUrl)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;query: &#x27;</span> + curUrl.<span class="hljs-property">query</span>)<br><br><span class="hljs-keyword">var</span> curStr = url.<span class="hljs-title function_">format</span>(curUrl)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;url: &#x27;</span> + curStr)<br><br><br><span class="hljs-comment">// querystring 모듈 : url의 parameter값을 분석합니다.</span><br><span class="hljs-keyword">var</span> querystring = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;querystring&#x27;</span>)<br><br><span class="hljs-comment">// 검색어만 추출합니다.</span><br><span class="hljs-keyword">var</span> params = querystring.<span class="hljs-title function_">parse</span>(curUrl.<span class="hljs-property">query</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;검색어: &#x27;</span> + params.<span class="hljs-property">query</span>)<br><br></code></pre></td></tr></table></figure><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-string">Url</span> &#123;<br>  <span class="hljs-attr">protocol:</span> <span class="hljs-string">&#x27;https:&#x27;</span>,<br>  <span class="hljs-attr">slashes:</span> <span class="hljs-literal">true</span>,<br>  <span class="hljs-attr">auth:</span> <span class="hljs-literal">null</span>,<br>  <span class="hljs-attr">host:</span> <span class="hljs-string">&#x27;search.naver.com&#x27;</span>,<br>  <span class="hljs-attr">port:</span> <span class="hljs-literal">null</span>,<br>  <span class="hljs-attr">hostname:</span> <span class="hljs-string">&#x27;search.naver.com&#x27;</span>,<br>  <span class="hljs-attr">hash:</span> <span class="hljs-literal">null</span>,<br>  <span class="hljs-attr">search:</span> <span class="hljs-string">&#x27;?sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=popcorn&#x27;</span>,<br>  <span class="hljs-attr">query:</span> <span class="hljs-string">&#x27;sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=popcorn&#x27;</span>,<br>  <span class="hljs-attr">pathname:</span> <span class="hljs-string">&#x27;/search.naver&#x27;</span>,<br>  <span class="hljs-attr">path:</span> <span class="hljs-string">&#x27;/search.naver?sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=popcorn&#x27;</span>,<br>  <span class="hljs-attr">href:</span><br>   <span class="hljs-string">&#x27;https://search.naver.com/search.naver?sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=popcorn&#x27;</span> &#125;<br><span class="hljs-attr">query:</span> <span class="hljs-string">sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=popcorn</span><br><span class="hljs-attr">url:</span> <span class="hljs-string">https://search.naver.com/search.naver?sm=top_hty&amp;fbm=1&amp;ie=utf8&amp;query=popcorn</span><br><span class="hljs-string">검색어:</span> <span class="hljs-string">popcorn</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>18. 이벤트 사용하기</title>
    <link href="/2019/10/28/NodeJS/18.%20%EC%9D%B4%EB%B2%A4%ED%8A%B8%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/18.%20%EC%9D%B4%EB%B2%A4%ED%8A%B8%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>이벤트 사용하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 이벤트 사용하기</span><br><br>process.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;exit&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;exit 이벤트 발생함.&#x27;</span>)<br>&#125;)<br><br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>   <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;2초 후에 실행 되었음&#x27;</span>)<br>   process.<span class="hljs-title function_">exit</span>()<br>&#125;, <span class="hljs-number">2000</span>)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;2초 후에 실행 될 것임&#x27;</span>)<br></code></pre></td></tr></table></figure><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk"><span class="hljs-number">2</span>초 후에 실행 될 것임<br><span class="hljs-number">2</span>초 후에 실행 되었음<br><span class="hljs-keyword">exit</span> 이벤트 발생함.<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>19. 이벤트 on, emit 사용하기</title>
    <link href="/2019/10/28/NodeJS/19.%20%EC%9D%B4%EB%B2%A4%ED%8A%B8%20on%20emit%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/19.%20%EC%9D%B4%EB%B2%A4%ED%8A%B8%20on%20emit%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>이벤트 on, emit 사용하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// 이벤트 on, emit 사용하기</span><br><span class="hljs-comment">// emit으로 보내고 on으로 받음</span><br><br>process.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;tick&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">count</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;tick 이벤트 발생함: &#x27;</span> + count)<br>&#125;)<br><br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;2초 후에 실행되었음&#x27;</span>)<br>    process.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;tick&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>)<br>&#125;, <span class="hljs-number">2000</span>)<br></code></pre></td></tr></table></figure><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs apache"><span class="hljs-attribute">2</span>초 후에 실행되었음<br><span class="hljs-attribute">tick</span> 이벤트 발생함: <span class="hljs-number">2</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>20. emit을 활용하여 이벤트 사용하기</title>
    <link href="/2019/10/28/NodeJS/20.%20emit%EC%9D%84%20%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC%20%EC%9D%B4%EB%B2%A4%ED%8A%B8%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/28/NodeJS/20.%20emit%EC%9D%84%20%ED%99%9C%EC%9A%A9%ED%95%98%EC%97%AC%20%EC%9D%B4%EB%B2%A4%ED%8A%B8%20%EC%82%AC%EC%9A%A9%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>emit을 활용하여 이벤트 사용하기</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// main.js 파일 내용</span><br><br><span class="hljs-comment">// emit을 활용하여 이벤트 사용하기</span><br><br><span class="hljs-comment">// calc 파일 가져오기</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">Calc</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;./calc&#x27;</span>)<br><br><span class="hljs-keyword">var</span> calc1 = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Calc</span>()<br>calc1.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;stop&#x27;</span>)<br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Calc에 stop 이벤트 전달함.&#x27;</span>)<br><br><br><span class="hljs-built_in">setTimeout</span>(<span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;2초 후에 실행되었음&#x27;</span>)<br>    process.<span class="hljs-title function_">emit</span>(<span class="hljs-string">&#x27;tick&#x27;</span>, <span class="hljs-string">&#x27;2&#x27;</span>)<br>&#125;, <span class="hljs-number">2000</span>)<br></code></pre></td></tr></table></figure><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><code class="hljs Javascript"><span class="hljs-comment">// calc.js 파일 내용</span><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">EventEmitter</span> = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;events&#x27;</span>).<span class="hljs-property">EventEmitter</span><br><span class="hljs-keyword">var</span> util = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;util&#x27;</span>)<br><br><span class="hljs-keyword">var</span> <span class="hljs-title class_">Calc</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>    <span class="hljs-variable language_">this</span>.<span class="hljs-title function_">on</span>(<span class="hljs-string">&#x27;stop&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params"></span>) &#123;<br>        <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">&#x27;Calc에 stop 이벤트 전달됨.&#x27;</span>)<br>    &#125;)<br>&#125;<br><br><span class="hljs-comment">// util을 사용하여 상속, emit을 사용하기위함</span><br>util.<span class="hljs-title function_">inherits</span>(<span class="hljs-title class_">Calc</span>, <span class="hljs-title class_">EventEmitter</span>)<br><br><span class="hljs-title class_">Calc</span>.<span class="hljs-property"><span class="hljs-keyword">prototype</span></span>.<span class="hljs-property">add</span> = <span class="hljs-keyword">function</span>(<span class="hljs-params">a, b</span>) &#123;<br>    <span class="hljs-keyword">return</span> a + b<br>&#125;<br><br><span class="hljs-variable language_">module</span>.<span class="hljs-property">exports</span> = <span class="hljs-title class_">Calc</span><br><br><br><br></code></pre></td></tr></table></figure><p>Calc에 stop 이벤트 전달됨.<br>Calc에 stop 이벤트 전달함.</p><pre><code class="hljs"></code></pre>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>21. readFileSync : 파일을 읽고 불러오기 (동기방식)</title>
    <link href="/2019/10/28/NodeJS/21.%20readFileSync%20%ED%8C%8C%EC%9D%BC%EC%9D%84%20%EC%9D%BD%EA%B3%A0%20%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0%20%EB%8F%99%EA%B8%B0%EB%B0%A9%EC%8B%9D/"/>
    <url>/2019/10/28/NodeJS/21.%20readFileSync%20%ED%8C%8C%EC%9D%BC%EC%9D%84%20%EC%9D%BD%EA%B3%A0%20%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0%20%EB%8F%99%EA%B8%B0%EB%B0%A9%EC%8B%9D/</url>
    
    <content type="html"><![CDATA[<p>readFileSync : 파일을 읽고 불러오기 (동기방식)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// readFileSync : 파일을 읽고 불러오기 (동기방식)</span><br><span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>)<br><br><span class="hljs-keyword">var</span> data = fs.<span class="hljs-title function_">readFileSync</span>(<span class="hljs-string">&#x27;./package.json&#x27;</span>, <span class="hljs-string">&#x27;utf8&#x27;</span>)<br><br><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data)<br><br></code></pre></td></tr></table></figure><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs stata">&#123;<br>  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;node&quot;</span>,<br>  <span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;1.0.0&quot;</span>,<br>  <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-string">&quot;main&quot;</span>: <span class="hljs-string">&quot;main.js&quot;</span>,<br>  <span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;test&quot;</span>: <span class="hljs-string">&quot;echo \&quot;</span><span class="hljs-keyword">Error</span>: <span class="hljs-keyword">no</span> <span class="hljs-keyword">test</span> specified\<span class="hljs-string">&quot; &amp;&amp; exit 1&quot;</span>   <br>  &#125;,<br>  <span class="hljs-string">&quot;author&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-string">&quot;license&quot;</span>: <span class="hljs-string">&quot;ISC&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>22. readFile : 파일을 읽고 불러오기 (비동기방식)</title>
    <link href="/2019/10/28/NodeJS/22.%20readFile%20%ED%8C%8C%EC%9D%BC%EC%9D%84%20%EC%9D%BD%EA%B3%A0%20%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0%20(%EB%B9%84%EB%8F%99%EA%B8%B0%EB%B0%A9%EC%8B%9D)/"/>
    <url>/2019/10/28/NodeJS/22.%20readFile%20%ED%8C%8C%EC%9D%BC%EC%9D%84%20%EC%9D%BD%EA%B3%A0%20%EB%B6%88%EB%9F%AC%EC%98%A4%EA%B8%B0%20(%EB%B9%84%EB%8F%99%EA%B8%B0%EB%B0%A9%EC%8B%9D)/</url>
    
    <content type="html"><![CDATA[<p>readFile : 파일을 읽고 불러오기 (비동기방식)</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs javascript"><span class="hljs-comment">// readFile : 파일을 읽고 불러오기 (비동기방식)</span><br><br><span class="hljs-keyword">var</span> fs = <span class="hljs-built_in">require</span>(<span class="hljs-string">&#x27;fs&#x27;</span>)<br><br>fs.<span class="hljs-title function_">readFile</span>(<span class="hljs-string">&#x27;./package.json&#x27;</span>, <span class="hljs-string">&#x27;utf8&#x27;</span>, <span class="hljs-keyword">function</span>(<span class="hljs-params">err, data</span>) &#123;<br>    <span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(data)<br>&#125;)<br><br></code></pre></td></tr></table></figure><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs stata">&#123;<br>  <span class="hljs-string">&quot;name&quot;</span>: <span class="hljs-string">&quot;node&quot;</span>,<br>  <span class="hljs-string">&quot;version&quot;</span>: <span class="hljs-string">&quot;1.0.0&quot;</span>,<br>  <span class="hljs-string">&quot;description&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-string">&quot;main&quot;</span>: <span class="hljs-string">&quot;main.js&quot;</span>,<br>  <span class="hljs-string">&quot;scripts&quot;</span>: &#123;<br>    <span class="hljs-string">&quot;test&quot;</span>: <span class="hljs-string">&quot;echo \&quot;</span><span class="hljs-keyword">Error</span>: <span class="hljs-keyword">no</span> <span class="hljs-keyword">test</span> specified\<span class="hljs-string">&quot; &amp;&amp; exit 1&quot;</span>   <br>  &#125;,<br>  <span class="hljs-string">&quot;author&quot;</span>: <span class="hljs-string">&quot;&quot;</span>,<br>  <span class="hljs-string">&quot;license&quot;</span>: <span class="hljs-string">&quot;ISC&quot;</span><br>&#125;<br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>NodeJS</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>04. 삼항연산자</title>
    <link href="/2019/10/27/JavaScript/Javascript/04%20%EC%82%BC%ED%95%AD%EC%97%B0%EC%82%B0%EC%9E%90/"/>
    <url>/2019/10/27/JavaScript/Javascript/04%20%EC%82%BC%ED%95%AD%EC%97%B0%EC%82%B0%EC%9E%90/</url>
    
    <content type="html"><![CDATA[<p>삼항연산자</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> input = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;숫자를 입력해주세요&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>)</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> number = <span class="hljs-title class_">Number</span>(input)</span><br><span class="language-javascript"></span><br><span class="language-javascript">        (number &gt; <span class="hljs-number">0</span>) ? <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;자연수입니다&#x27;</span>) : <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;자연수가 아닙니다.&#x27;</span>)</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>Javascript</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>03. 배열</title>
    <link href="/2019/10/27/JavaScript/Javascript/03%20%EB%B0%B0%EC%97%B4/"/>
    <url>/2019/10/27/JavaScript/Javascript/03%20%EB%B0%B0%EC%97%B4/</url>
    
    <content type="html"><![CDATA[<p>배열</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> array = [<span class="hljs-number">10</span>, <span class="hljs-number">20</span>, <span class="hljs-number">30</span>, <span class="hljs-number">40</span>, <span class="hljs-number">50</span>];</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(array);</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(array[<span class="hljs-number">0</span>]);</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(array[<span class="hljs-number">1</span>]);</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(array[<span class="hljs-number">2</span>]);</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(array[<span class="hljs-number">3</span>]);</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(array[<span class="hljs-number">4</span>]);</span><br><span class="language-javascript">        array[<span class="hljs-number">0</span>] = <span class="hljs-number">100</span>;</span><br><span class="language-javascript">        array[<span class="hljs-number">1</span>] = <span class="hljs-number">200</span>;</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(array);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>Javascript</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>05. boolean 표현식</title>
    <link href="/2019/10/27/JavaScript/Javascript/05%20boolean%20%ED%91%9C%ED%98%84%EC%8B%9D/"/>
    <url>/2019/10/27/JavaScript/Javascript/05%20boolean%20%ED%91%9C%ED%98%84%EC%8B%9D/</url>
    
    <content type="html"><![CDATA[<p>boolean 표현식</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> number = <span class="hljs-title class_">Number</span>(<span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;숫자를 입력해주세요&#x27;</span>, <span class="hljs-string">&#x27;&#x27;</span>));</span><br><span class="language-javascript"></span><br><span class="language-javascript">        (number &gt; <span class="hljs-number">0</span>) &amp;&amp; <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;자연수 입니다&#x27;</span>);</span><br><span class="language-javascript">        (number &gt; <span class="hljs-number">0</span>) || <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;자연수가 아닙니다&#x27;</span>);</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>Javascript</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>01. 형변환 하기</title>
    <link href="/2019/10/27/JavaScript/Javascript/01%20%ED%98%95%EB%B3%80%ED%99%98%20%ED%95%98%EA%B8%B0/"/>
    <url>/2019/10/27/JavaScript/Javascript/01%20%ED%98%95%EB%B3%80%ED%99%98%20%ED%95%98%EA%B8%B0/</url>
    
    <content type="html"><![CDATA[<p>형변환 하기</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(<span class="hljs-keyword">typeof</span> <span class="hljs-title class_">Number</span>(<span class="hljs-string">&#x27;234&#x27;</span>))</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>Javascript</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>06. switch 조건문</title>
    <link href="/2019/10/27/JavaScript/Javascript/06%20switch%20%EC%A1%B0%EA%B1%B4%EB%AC%B8/"/>
    <url>/2019/10/27/JavaScript/Javascript/06%20switch%20%EC%A1%B0%EA%B1%B4%EB%AC%B8/</url>
    
    <content type="html"><![CDATA[<p>switch 조건문</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> date = <span class="hljs-keyword">new</span> <span class="hljs-title class_">Date</span>()</span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> month = date.<span class="hljs-title function_">getMonth</span>() + <span class="hljs-number">1</span></span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">switch</span>(month) &#123;</span><br><span class="language-javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">3</span>:</span><br><span class="language-javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">4</span>:</span><br><span class="language-javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">5</span>:</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;봄 입니다&#x27;</span>)</span><br><span class="language-javascript">                <span class="hljs-keyword">break</span></span><br><span class="language-javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">6</span>:</span><br><span class="language-javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">7</span>:</span><br><span class="language-javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">8</span>:</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;여름 입니다&#x27;</span>)</span><br><span class="language-javascript">                <span class="hljs-keyword">break</span></span><br><span class="language-javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">9</span>:</span><br><span class="language-javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">10</span>:</span><br><span class="language-javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">11</span>:</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;가을 입니다&#x27;</span>)</span><br><span class="language-javascript">                <span class="hljs-keyword">break</span></span><br><span class="language-javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">12</span>:</span><br><span class="language-javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">1</span>:</span><br><span class="language-javascript">            <span class="hljs-keyword">case</span> <span class="hljs-number">2</span>:</span><br><span class="language-javascript">                <span class="hljs-title function_">alert</span>(<span class="hljs-string">&#x27;겨울 입니다&#x27;</span>)</span><br><span class="language-javascript">                <span class="hljs-keyword">break</span></span><br><span class="language-javascript">        &#125;</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>Javascript</category>
      
    </categories>
    
    
  </entry>
  
  
  
  <entry>
    <title>02. prompt confirm</title>
    <link href="/2019/10/27/JavaScript/Javascript/02%20prompt%20confirm/"/>
    <url>/2019/10/27/JavaScript/Javascript/02%20prompt%20confirm/</url>
    
    <content type="html"><![CDATA[<p>prompt : 입력값을 받을수 있습니다<br>confirm: 확인 취소 버튼을 표시합니다</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs html"><span class="hljs-tag">&lt;<span class="hljs-name">html</span>&gt;</span><br><span class="hljs-tag">&lt;<span class="hljs-name">head</span>&gt;</span><br>    <span class="hljs-tag">&lt;<span class="hljs-name">script</span>&gt;</span><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> output = <span class="hljs-title function_">prompt</span>(<span class="hljs-string">&#x27;메시지&#x27;</span>, <span class="hljs-string">&#x27;디폴트&#x27;</span>)</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(output)</span><br><span class="language-javascript"></span><br><span class="language-javascript">        <span class="hljs-keyword">var</span> output2 = <span class="hljs-title function_">confirm</span>(<span class="hljs-string">&#x27;메시지&#x27;</span>)</span><br><span class="language-javascript">        <span class="hljs-title function_">alert</span>(output2)</span><br><span class="language-javascript">    </span><span class="hljs-tag">&lt;/<span class="hljs-name">script</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">head</span>&gt;</span><br><span class="hljs-tag">&lt;/<span class="hljs-name">html</span>&gt;</span><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>JavaScript</category>
      
      <category>Javascript</category>
      
    </categories>
    
    
  </entry>
  
  
  
  
</search>
